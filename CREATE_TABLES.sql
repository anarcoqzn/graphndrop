
CREATE TABLE CLIENTES(
	cpf CHAR(11),
	nome VARCHAR2(40) NOT NULL,
	telefone VARCHAR2(15) NOT NULL,
	CONSTRAINT CLIENTES_PKEY PRIMARY KEY (cpf),
	CONSTRAINT CPF_LENGTH CHECK(length(cpf)=11));

CREATE TABLE ENDERECO(
	id NUMBER GENERATED AS IDENTITY,
	cpf_cliente CHAR(11) NOT NULL,
	cidade VARCHAR2(20) NOT NULL,
	bairro VARCHAR2(20) NOT NULL,
	rua VARCHAR2(20) NOT NULL,
	numero NUMBER NOT NULL,
	tipo VARCHAR2(10) NOT NULL,
	CONSTRAINT ENDERECO_PKEY PRIMARY KEY (id),
	CONSTRAINT ENDERECO_CPF_CLIENTE_FKEY FOREIGN KEY (cpf_cliente) REFERENCES CLIENTES(cpf),
	CONSTRAINT TIPO_CHK CHECK(tipo='RESIDENCIA' OR tipo='TRABALHO' OR TIPO='OUTRO'));

CREATE TABLE MEDICAMENTOS(
	id NUMBER GENERATED AS IDENTITY,
	nome VARCHAR2(40) NOT NULL,
	data_validade DATE NOT NULL,
	venda_exclusiva NUMBER(1) NOT NULL,
	CONSTRAINT MEDICAMENTOS_PKEY PRIMARY KEY (id));

CREATE TABLE FARMACIA(                                                                                          
	id NUMBER GENERATED AS IDENTITY,
	nome VARCHAR2(40) NOT NULL,
	cidade VARCHAR2(40) NOT NULL,
	bairro VARCHAR2(40) NOT NULL,
	tipo VARCHAR2(6) NOT NULL,
	CONSTRAINT FARMACIA_PKEY PRIMARY KEY (id),
	CONSTRAINT TIPO_FARM_CHK CHECK(tipo = 'SEDE' or tipo = 'FILIAL'));

CREATE TABLE FUNCIONARIOS(
	cpf CHAR(11),
	nome VARCHAR2(40) NOT NULL,
	data_nasc DATE NOT NULL,
	farmacia NUMBER ,
	CONSTRAINT FUNCIONARIOS_PKEY PRIMARY KEY (cpf),
	CONSTRAINT CPF_FUNC_LENGTH CHECK(length(cpf)=11),
	CONSTRAINT FUNCIONARIOS_FARMACIA_FKEY FOREIGN KEY (farmacia) REFERENCES FARMACIA(id));

ALTER TABLE FUNCIONARIOS ADD CARGO VARCHAR2(20) NOT NULL;
ALTER TABLE FUNCIONARIOS ADD CONSTRAINT CARGO_FUNC_CHK CHECK(CARGO IN ('FARMACEUTICO','ADMINISTRADOR','VENDEDOR','ENTREGADOR','CAIXA'));

CREATE FUNCTION get_cargo_func(CPF_FUNC IN CHAR) 
    RETURN VARCHAR2 DETERMINISTIC
    IS CARGO_GERENTE VARCHAR2(20);
    BEGIN  
        SELECT CARGO INTO CARGO_GERENTE FROM FUNCIONARIOS WHERE CPF=CPF_FUNC;
        RETURN CARGO_GERENTE;
    END;

ALTER TABLE FARMACIA ADD gerente CHAR(11) NOT NULL CONSTRAINT FARM_FUNC_FKEY REFERENCES FUNCIONARIOS(cpf);

CREATE FUNCTION is_med_exclusivo(med_id IN NUMBER)
	RETURN NUMBER
	IS is_exclusivo NUMBER;
	BEGIN
		SELECT venda_exclusiva INTO is_exclusivo FROM MEDICAMENTOS WHERE id = med_id;
		RETURN is_exclusivo;
	END;

CREATE TABLE VENDAS(
	id NUMBER GENERATED AS IDENTITY,
	funcionario CHAR(11) NOT NULL,
	medicamento NUMBER NOT NULL,
	cliente CHAR(11),
	data DATE NOT NULL,
	CONSTRAINT VENDAS_PKEY PRIMARY KEY (id),
	CONSTRAINT VENDAS_FUNCIONARIO_FKEY FOREIGN KEY (funcionario) REFERENCES FUNCIONARIOS(cpf),
	CONSTRAINT VENDA_MEDICAMENTO_FKEY FOREIGN KEY (medicamento) REFERENCES MEDICAMENTOS(id),
	CONSTRAINT VENDA_CLIENTE_FKEY FOREIGN KEY (cliente) REFERENCES CLIENTES(cpf));

CREATE FUNCTION get_cli_end(this_cpf_cliente IN CHAR)
	RETURN NUMBER
	IS cli_endereco NUMBER;
	BEGIN
		SELECT id INTO cli_endereco FROM ENDERECO WHERE cpf_cliente = this_cpf_cliente;
		RETURN cli_endereco;
	END;

CREATE TABLE ENTREGAS(
	id NUMBER GENERATED AS IDENTITY,
	cliente CHAR(11) NOT NULL,
	funcionario CHAR(11) NOT NULL,
	endereco NUMBER NOT NULL,
	medicamento NUMBER NOT NULL,
	CONSTRAINT ENTREGAS_PKEY PRIMARY KEY (id),
	CONSTRAINT ENTREGAS_CLIENTE_FKEY FOREIGN KEY (cliente) REFERENCES CLIENTES(cpf),
	CONSTRAINT ENTREGAS_FUNCIONARIO_FKEY FOREIGN KEY (funcionario) REFERENCES FUNCIONARIOS(cpf),
	CONSTRAINT ENTREGAS_ENDERECO_FKEY FOREIGN KEY (endereco) REFERENCES ENDERECO(id),
	CONSTRAINT ENTREGAS_MEDICAMENTO_FKEY FOREIGN KEY (medicamento) REFERENCES MEDICAMENTOS(id));